# This file represents a workflow of packaging and release.
# This workflow will be automatically ran whenever adjust VERSION file and pull
# this changes to main branches.

name: Packaging and Release For Ubuntu
on:
  push:
    branches: [main, master]
    paths:
      - VERSION
  pull_request:
    branches: [main, master]
    paths:
      - VERSION

permissions:
  contents: write
  discussions: write

jobs:
  build-test-package-release:
    name: "Release linter on ubuntu-24.04 gcc-14"
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Validate and Set Variables
        id: var
        shell: bash
        run: |
          # Check version string.
          release_version=$(cat VERSION | sed '/^$/d' | sed 's/[[:space:]]*$//')
          if [[ ! "${release_version}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "VERSION format isn't correct. version: ${release_version}"
            exit -1
          fi

          # Compiler
          echo "CC=gcc-14" >> ${GITHUB_ENV}
          echo "CXX=g++-14" >> ${GITHUB_ENV}
          echo "Set compiler: CXX: g++-14"

          echo "release_version=${release_version}" >> ${GITHUB_OUTPUT}
          echo "pkg_name=linter_${release_version}_ubuntu-24.04_${{ runner.arch }}" >> ${GITHUB_OUTPUT}

      - name: Install Building Dependencies
        run: |
          sudo apt install -y ninja-build;
          sudo apt install -y libboost-all-dev;
          sudo apt install -y libgit2-dev;

      - name: CMake
        run: |
          set -ex;
          cmake -S . -B build -GNinja \
            -DCMAKE_CXX_FLAGS="${{ inputs.cpp-flags }}" \
            -DCMAKE_BUILD_TYPE="${{ inputs.build-type }}";

      - name: Compile
        run: |
          cmake --build build -v

      - name: Run Unittests
        run: |
          ./build/tests/test_git;

      - name: Install Packaging Dependencies
        run: |
          sudo apt install -y pax-utils
          sudo apt install -y patchelf

      - name: Pack
        run: |
          sudo ./package.sh

      - name: Rename Packages
        shell: bash
        run: |
          mv build/dist.tar.gz build/${{ steps.var.outputs.pkg_name }}.tar.gz

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "${{ steps.var.outputs.pkg_name }}.tar.gz"
          path: build/${{ steps.var.outputs.pkg_name }}.tar.gz
          if-no-files-found: error

      - name: Release to Github Release Page
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.var.outputs.release_version }}
          files: |
            build/${{ steps.var.outputs.pkg_name }}.tar.gz


