name: 'cpp-linter action'
description: |
  A C/C++ linter to improve code quality.
  Default only supports pr event. If you want to use for non-pr event,
  you must sepcify the default-branch option.
author: emmettzhang2020@outlook.com
branding:
  icon: "check-circle"
  color: "red"
inputs:
  log-level:
    description: Set log level for cpp-linter
    default: ERROR
  clang-tidy-version:
    description: Choose which clang-tidy version you want to use
    required: true
    default: 18
  enable-clang-tidy:
    description: Enable clang-tidy check
    type: boolean
    default: true
  clang-tidy-config-file:
    description: clang tidy config file
    type: string
  clang-tidy-database:
    description: clang tidy command database
    type: string
    default: build
  target:
    description: Default branch which usually useds for non-pr related events
    type: string
    default: master

outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}

runs:
  using: "composite"
  steps:
    - name: Install dependencies on Linux
      if: runner.os == 'Linux'
      shell: bash
      run: |
        release_version=$(cat VERSION | sed '/^$/d' | sed 's/[[:space:]]*$//')
        echo "Current path: `pwd`, current version: ${release_version}"
        wget "https://github.com/emmett2020/cpp-linter/releases/download/v${release_version}/cpp_linter_${release_version}_ubuntu-24.04_${{ runner.arch }}.tar.gz" -O cpp-linter.tar.gz
        tar -xvf cpp-linter.tar.gz

        cd cpp-linter-dist && ls -lrth && ./install.sh

    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Run cpp-linter On Linux
      if: runner.os == 'Linux'
      shell: bash
      run: |
        # ls -lrtha
        # echo "---------------"
        # ls -lrthaR .git
        # echo "---------------"
        # git rev-parse test-action
        # echo "---xyyx------------"
        /usr/local/bin/cpp-linter --log-level=${{ inputs.log-level }}                          \
                                  --enable-clang-tidy=${{ inputs.enable-clang-tidy }}          \
                                  --clang-tidy-version=${{ inputs.clang-tidy-version }}        \
                                  --clang-tidy-database=${{ inputs.clang-tidy-database }}      \
                                  --target=${{ inputs.target }}


